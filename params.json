{"name":"Ruby-regress","body":"# ruby-regress\r\n### A partial drop-in replacement for |STAT's regress\r\n\r\n`ruby-regress` is a tool for computing correlations and regression equations\r\nfrom two-variable input. It is designed to function as a drop-in replacement\r\nfor Gary Perlman's `regress`, at least for those who use only the basic\r\nfunctionality that `regress` provides.\r\n\r\n## Why!?\r\n\r\nThe problem with Gary Perlman's excellent |STAT programs is twofold: \r\n\r\n   + The only way of obtaining a copy is by emailing Perlman and asking for it.\r\n   + The distribution of modified copies is [expressely forbidden](http://oldwww.acm.org/perlman/stat/history.html#conditions).\r\n\r\nIf you need bulletproof robustness you're probably better off dealing with Perlman's terms of access and using |STAT; if you want ease of installation, try `ruby-regress`.\r\n## Installation\r\n\r\n#### From rubygems\r\n\r\nInstalling ruby-regress using rubygems is absurdly easy:\r\n\r\n    gem install ruby-regress\r\n    \r\nwhich installs the `regress` executable.\r\n\r\n#### From source\r\n\r\nDownload the most recent source from Github:\r\n\r\n    git clone git://github.com/doches/ruby-regress.git\r\n\r\nthen build and install the gem:\r\n\r\n    cd ruby-regress\r\n    rake build\r\n    sudo rake install\r\n\r\n## Usage\r\n\r\nruby-regress installs a single command line tool called `regress`, which\r\nreads from `STDIN` and prints a report containing the correlation coefficient,\r\nplus some descriptive statistics, to `STDOUT`. For example, if we have a file in\r\nthe current directory called `data.txt` containing two datasets:\r\n\r\n    1   12.0\r\n    2   11.0\r\n    3   13.0\r\n    4   14.0\r\n\r\nwe can get the correlation coefficient between these two variables by:\r\n\r\n    regress < data.txt\r\n\r\nwhich will dump a load of statistical information about the datasets to\r\nthe terminal.\r\n\r\n## Limitations\r\n\r\nruby-regress only understands one- or two-column input. Give it two columns and you'll get a regression plus some descriptive stats (mean, range, &c); give it a single column of input and you'll only get the descriptive stats. ","tagline":"A command-line tool & Ruby class for computing Pearson's r and other stats","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}